# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Actor {
  id: Int!
  name: String!
  url: String!
  movies: [Movie!]!
}

type BoxOffice {
  id: Int!
  date: DateTime!
  boxOfficeToMovies: [BoxOfficeToMovie!]!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type BoxOfficeToMovie {
  id: Int!
  boxOffice: BoxOffice!
  movie: Movie!
  rank: Int!
}

type Like {
  id: Int!
  user: User!
  movie: Movie!
}

type User {
  id: Int!
  password: String!
  email: String!
  name: String!
  image: String!
  comments: [Comment!]!
  likes: [Like!]!
}

type Comment {
  id: Int!
  contents: String!
  created_at: DateTime!
  star: Float!
  user: User!
  movie: Movie!
}

type Director {
  id: Int!
  name: String!
  movies: [Movie!]!
}

type Genre {
  id: Int!
  name: String!
  movies: [Movie!]!
}

type Poster {
  id: Int!
  url: String!
  isRep: Boolean!
  movie: Movie!
}

type Seen {
  id: Int!
  user: User!
  movie: Movie!
}

type Still {
  id: Int!
  url: String!
  isRep: Boolean!
  movie: Movie!
}

type Vod {
  id: Int!
  url: String!
  isRep: Boolean!
  movie: Movie!
}

type Movie {
  id: String!
  title: String!
  open_dt: DateTime!
  audi_acc: Int!
  avg_star: Float!
  cnt_star: Int!
  rating: Int!
  plot: String!
  runtime: Int!
  boxOfficeToMovies: [BoxOfficeToMovie!]!
  genres: [Genre!]!
  actors: [Actor!]!
  directors: [Director!]!
  posters: [Poster!]!
  stills: [Still!]!
  vods: [Vod!]!
  comments: [Comment!]!
  likes: [Like!]!
  seen: [Seen!]!
}

type AccessToken {
  accessToken: String!
}

type Query {
  fetchActor: String!
  fetchActorImage(name: String!): String!
  fetchUser: String!
  fetchBoxOffice(date: String!): [Movie!]!
  fetchMovie(id: String!): Movie!
  fetchBoxOfficeToMovie: String!
  fetchLike(userId: Int!, movieId: String!): Boolean!
  fetchLikeCountByMovie(movieId: String!): Int!
  fetchPoster: String!
  fetchSeen(userId: Float!, movieId: String!): Boolean!
  fetchStill: String!
  fetchVod: String!
}

type Mutation {
  updateActorImage(id: Float!, url: String!): Actor!
  loginUser(email: String!, password: String!): AccessToken!
  restoreAccessToken: AccessToken!
  createUser(email: String!, password: String!, name: String!): User!
  initializeTable: String!
  createLike(userId: Int!, movieId: String!): Boolean!
  deleteLike(userId: Int!, movieId: String!): Boolean!
}